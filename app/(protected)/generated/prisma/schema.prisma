// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid()) @map("_id")
  email         String     @unique
  name          String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  campaigns     Campaign[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  access_token      String?
  token_type        String?
  scope             String?
  user              User    @relation(fields: [userId], references: [id])
  userId            String
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Campaign {
  id        String   @id @default(cuid()) @map("_id")
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String
  name      String
  posts     Post[]
  createdAt DateTime @default(now())
}

model Post {
  id          String    @id @default(cuid()) @map("_id")
  campaign    Campaign? @relation(fields: [campaignId], references: [id])
  campaignId  String
  content     String
  platform    String
  mediaUrl    String?
  scheduledAt DateTime
  status      String
  analytics   Json?
}
